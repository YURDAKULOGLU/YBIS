name: "Automated Agent Handoff"
description: "Enables an agent to hand off a task to another agent, ensuring context transfer and user notification."
trigger_events:
  - "Agent completes a task and identifies a need for another agent."
  - "User request: /ybis:handoff <target_agent_id>"

steps:
  - step_id: "summarize_context"
    action: "Summarize the completed work and relevant session context for the handoff."
    input: "session-context.md, DEVELOPMENT_LOG.md (recent entries)"
    output: "Handoff summary: [summary_content]"

  - step_id: "identify_target_agent"
    action: "Identify the most suitable next agent for the task continuation based on AI_Asistan_Gorev_Dagilimi.md or user input."
    input: "Task details, AI_Asistan_Gorev_Dagilimi.md, AGENT_REGISTRY.json"
    output: "Target agent: [target_agent_id]"

  - step_id: "save_context_to_target"
    action: "Save the handoff summary and relevant context files (e.g., plan.md) to the target agent's personal folder (docs/AI/[target_agent_id]/)."
    input: "Handoff summary, relevant files, target_agent_id"
    output: "Context saved to target agent's folder: [folder_path]"

  - step_id: "notify_user_and_target"
    action: "Notify the user about the handoff and inform the target agent (if active) about the new task."
    input: "User, target_agent_id, handoff_summary"
    output: "User and target agent notified."

  - step_id: "log_action"
    action: "Log the handoff action and its outcome in DEVELOPMENT_LOG.md."
    input: "Workflow details, outcome"
    output: "Logged in DEVELOPMENT_LOG.md"

commands_involved:
  - "/ybis:handoff" # New command to be defined
  - "/ybis:log-decision"

agents_involved:
  - "Orchestrator"
  - "Any Agent (initiator)"
  - "Any Agent (target)"
version: 1.0.0
last_updated: 2025-10-28
purpose: Facilitates a seamless transition of tasks and context between AI agents.
owner: Orchestrator
id: handoff
