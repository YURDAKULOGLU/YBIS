workflow:
  id: documentation-maintenance
  name: Documentation Maintenance & Update System
  description: Ensures all project documentation stays current and accurate
  type: brownfield
  project_types:
    - documentation-update
    - tech-stack-change
    - architecture-change
    - task-completion

  sequence:
    - step: analyze-changes
      agent: analyst
      action: Identify what documentation needs updating
      creates: documentation-update-plan.md
      requires: 
        - Code changes completed
        - Architecture decisions made
        - Tech stack updates
      notes: |
        Analyze:
        - Package.json changes → Update tech-stack.md
        - New architecture decisions → Update Architecture_better.md + DEVELOPMENT_LOG.md
        - Completed tasks → Update tasks.md + DEVELOPMENT_LOG.md
        - New principles → Update YBIS_PROJE_ANAYASASI.md
        - Cross-reference consistency → Check all files

    - step: update-tech-stack
      agent: dev
      action: Update tech-stack.md with new package versions
      creates: Updated tech-stack.md
      requires: documentation-update-plan.md
      condition: "Package versions changed"
      notes: |
        Update sections:
        - Package Version Summary
        - Architecture Overview
        - API References
        - Update "Last Updated" timestamp

    - step: update-development-log
      agent: dev
      action: Add new entries to DEVELOPMENT_LOG.md
      creates: Updated DEVELOPMENT_LOG.md
      requires: documentation-update-plan.md
      condition: "Architecture decisions or task completions"
      notes: |
        Add entries with format:
        - **Date:** YYYY-MM-DD
        - **Type:** AD-XXX (Architecture Decision) or Task Completion
        - **Description:** What was done
        - **Impact:** What this affects
        - **Next Steps:** What follows

    - step: update-tasks
      agent: pm
      action: Mark completed tasks and add new ones
      creates: Updated tasks.md
      requires: documentation-update-plan.md
      condition: "Tasks completed or new tasks identified"
      notes: |
        Update:
        - Mark completed tasks with ✅
        - Add new tasks to appropriate week
        - Update task dependencies
        - Update "Last Updated" timestamp

    - step: update-constitution
      agent: architect
      action: Update YBIS_PROJE_ANAYASASI.md if new principles added
      creates: Updated YBIS_PROJE_ANAYASASI.md
      requires: documentation-update-plan.md
      condition: "New architectural principles or rules"
      notes: |
        Only update if:
        - New port added
        - New quality rule established
        - New architectural pattern adopted
        - Version bump required

    - step: validate-consistency
      agent: qa
      action: Check all documentation for consistency
      creates: documentation-consistency-report.md
      requires: 
        - Updated tech-stack.md
        - Updated DEVELOPMENT_LOG.md
        - Updated tasks.md
      notes: |
        Validate:
        - Package versions consistent across all files
        - Cross-references point to correct files
        - Dates are current
        - No duplicate information
        - All links work
        - Formatting consistent

    - step: update-index
      agent: pm
      action: Update DOCUMENTATION_INDEX.md with new status
      creates: Updated DOCUMENTATION_INDEX.md
      requires: documentation-consistency-report.md
      notes: |
        Update:
        - "Last Updated" dates
        - Status indicators
        - File purposes
        - Navigation links
        - Health check status

  flow_diagram: |
    ```mermaid
    graph TD
        A[Code/Architecture Changes] --> B[Analyze Changes]
        B --> C{Update Needed?}
        C -->|Yes| D[Update Tech Stack]
        C -->|Yes| E[Update Dev Log]
        C -->|Yes| F[Update Tasks]
        C -->|Yes| G[Update Constitution]
        D --> H[Validate Consistency]
        E --> H
        F --> H
        G --> H
        H --> I[Update Index]
        I --> J[Documentation Complete]
        C -->|No| J
    ```

  decision_guidance:
    when_to_use:
      - After completing any development task
      - When package versions change
      - When architecture decisions are made
      - When new principles are established
      - Before starting new development phase

  handoff_prompts:
    analyst_to_dev: "Documentation update plan ready. Focus on tech-stack.md and DEVELOPMENT_LOG.md updates."
    dev_to_pm: "Technical documentation updated. Please review tasks.md and mark completed items."
    pm_to_architect: "Task updates complete. Review if constitution needs updates for new principles."
    architect_to_qa: "All documentation updated. Please validate consistency across all files."
    qa_to_pm: "Consistency validated. Update the documentation index with new status."




